# 시스템에 사용자 계정을 만들고 그 계정을 사용하게 해야 함. root 사용자로 주면 보안상 취약
user www-data;

# cpu 코어당 최소 하나의 프로세스를 갖도록 설정하는게 좋음. auto로 설정해서 Nginx가 최적의 값을 결정하게 하는 것이 좋음.
worker_processes auto;

# 404 error에 대한 로그를 남길 것인지에 대해 지정.
# 여기서는 불필요한 로그라고 생각하여 off로 설정
log_not_found off;

# 대용량 트래픽이면 이 설정 값을 올리는게 좋지만 여기서는 적절하게 1024로 설정
worker_connections 1024;

# 에러 로그를 남길 경로
error_log /var/log/nginx/error.log warn;

# 메인 프로세스의 PID를 저장
pid /var/run/nginx.pid;

http {
  # Nginx가 서버 응답 헤더에서 버전 번호를 보내지 못하도록 함.
  include sub/security/server_software_information.conf;

  # MIME 타입 지정
  include sub/media_types/mime_type.conf;

  # 문자 인코딩 설정
  include h5bp/media_types/character_encodings.conf;

  # 로그 파일에 $http_x_forwarded_for를 디폴트로 포함 시키도록 설정
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

  # keep-alive을 30초로 제한
  # 웹 소켓 heartbeat 시간을 20초로 설정 했기에 30초로 설정
  keepalive_timeout 30s;

  # 컨텐츠 타입에 따라 캐시 만료 시간 설정
  include sub/web_performance/cache_expiration.conf;

  # 컨텐츠 타입에 따라 Cache-Control 헤더 설정
  include sub/web_performance/cache_control.conf;

  # X-Frame-Options 헤더 설정
  include sub/security/x-frame-options.conf;

  # CSP 설정
  include sub/security/x-frame-options.conf;

  # Permissions-Policy 설정
  include sub/security/permissions-policy.conf;

  # server 설정
  include conf.d/no-ssl.default.conf;
}